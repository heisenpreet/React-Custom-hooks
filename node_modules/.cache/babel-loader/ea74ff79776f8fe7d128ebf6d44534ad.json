{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harry\\\\Desktop\\\\front-end\\\\React\\\\Basics\\\\custom hooks\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const [isLoading, error, sendRequest] = useHttp();\n\n  const createTask = (taskText, data) => {\n    const generatedId = data.name;\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = taskText => {\n    sendRequest({\n      url: \"https://httppractice-86b7f-default-rtdb.firebaseio.com/tasks.json\",\n      method: \"POST\",\n      body: {\n        text: taskText\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }, createTask.bind(null, taskText));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"bVBCzpiWNNfrpIUgTAnNB76l+lo=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["useCallback","useState","Section","TaskForm","useHttp","NewTask","props","isLoading","error","sendRequest","createTask","taskText","data","generatedId","name","createdTask","id","text","onAddTask","enterTaskHandler","url","method","body","headers","bind"],"sources":["C:/Users/Harry/Desktop/front-end/React/Basics/custom hooks/src/components/NewTask/NewTask.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\nconst NewTask = (props) => {\n  const [isLoading, error, sendRequest] = useHttp();\n\n  const createTask = (taskText, data) => {\n    const generatedId = data.name;\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n  const enterTaskHandler = (taskText) => {\n    sendRequest(\n      {\n        url: \"https://httppractice-86b7f-default-rtdb.firebaseio.com/tasks.json\",\n        method: \"POST\",\n        body: { text: taskText },\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      },\n      createTask.bind(null, taskText)\n    );\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAM,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,WAAnB,IAAkCL,OAAO,EAA/C;;EAEA,MAAMM,UAAU,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;IACrC,MAAMC,WAAW,GAAGD,IAAI,CAACE,IAAzB;IACA,MAAMC,WAAW,GAAG;MAAEC,EAAE,EAAEH,WAAN;MAAmBI,IAAI,EAAEN;IAAzB,CAApB;IAEAL,KAAK,CAACY,SAAN,CAAgBH,WAAhB;EACD,CALD;;EAMA,MAAMI,gBAAgB,GAAIR,QAAD,IAAc;IACrCF,WAAW,CACT;MACEW,GAAG,EAAE,mEADP;MAEEC,MAAM,EAAE,MAFV;MAGEC,IAAI,EAAE;QAAEL,IAAI,EAAEN;MAAR,CAHR;MAIEY,OAAO,EAAE;QACP,gBAAgB;MADT;IAJX,CADS,EASTb,UAAU,CAACc,IAAX,CAAgB,IAAhB,EAAsBb,QAAtB,CATS,CAAX;EAWD,CAZD;;EAcA,oBACE,QAAC,OAAD;IAAA,wBACE,QAAC,QAAD;MAAU,WAAW,EAAEQ,gBAAvB;MAAyC,OAAO,EAAEZ;IAAlD;MAAA;MAAA;MAAA;IAAA,QADF,EAEGC,KAAK,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAFZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CA7BD;;GAAMH,O;UACoCD,O;;;KADpCC,O;AA+BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}