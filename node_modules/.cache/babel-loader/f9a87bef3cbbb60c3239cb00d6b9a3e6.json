{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harry\\\\Desktop\\\\front-end\\\\React\\\\Basics\\\\custom hooks\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest\n  } = useHttp(createTask);\n\n  const enterTaskHandler = taskText => {\n    const createTask = (taskText, data) => {\n      const generatedId = data.name;\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    };\n\n    sendRequest({\n      url: \"https://httppractice-86b7f-default-rtdb.firebaseio.com/tasks.json\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        text: taskText\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"CCnshfZlH2rzEybPx6MnKYOG61s=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["useCallback","useState","Section","TaskForm","useHttp","NewTask","props","isLoading","error","sendRequest","createTask","enterTaskHandler","taskText","data","generatedId","name","createdTask","id","text","onAddTask","url","method","headers","body"],"sources":["C:/Users/Harry/Desktop/front-end/React/Basics/custom hooks/src/components/NewTask/NewTask.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest } = useHttp(createTask);\n  const enterTaskHandler = (taskText) => {\n    const createTask = (taskText, data) => {\n      const generatedId = data.name;\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    };\n    sendRequest({\n      url: \"https://httppractice-86b7f-default-rtdb.firebaseio.com/tasks.json\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: { text: taskText },\n    });\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAM;IAAEC,SAAF;IAAaC,KAAb;IAAoBC;EAApB,IAAoCL,OAAO,CAACM,UAAD,CAAjD;;EACA,MAAMC,gBAAgB,GAAIC,QAAD,IAAc;IACrC,MAAMF,UAAU,GAAG,CAACE,QAAD,EAAWC,IAAX,KAAoB;MACrC,MAAMC,WAAW,GAAGD,IAAI,CAACE,IAAzB;MACA,MAAMC,WAAW,GAAG;QAAEC,EAAE,EAAEH,WAAN;QAAmBI,IAAI,EAAEN;MAAzB,CAApB;MAEAN,KAAK,CAACa,SAAN,CAAgBH,WAAhB;IACD,CALD;;IAMAP,WAAW,CAAC;MACVW,GAAG,EAAE,mEADK;MAEVC,MAAM,EAAE,MAFE;MAGVC,OAAO,EAAE;QACP,gBAAgB;MADT,CAHC;MAMVC,IAAI,EAAE;QAAEL,IAAI,EAAEN;MAAR;IANI,CAAD,CAAX;EAQD,CAfD;;EAiBA,oBACE,QAAC,OAAD;IAAA,wBACE,QAAC,QAAD;MAAU,WAAW,EAAED,gBAAvB;MAAyC,OAAO,EAAEJ;IAAlD;MAAA;MAAA;MAAA;IAAA,QADF,EAEGC,KAAK,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAFZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAzBD;;GAAMH,O;UACsCD,O;;;KADtCC,O;AA2BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}